%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ff771ccdf4150419d9ff4d342b069aae, type: 3}
  m_Name: Communication 8
  m_EditorClassIdentifier: 
  Title:
    m_Untranslated: Axis Communication - Inputs and Outputs
  m_Paragraphs:
    m_Items:
    - m_Type: 6
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: 
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 2800000, guid: 74d6ea7c91df8ec48a7b92aad060c93e, type: 3}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 1
        m_UnmaskedViews:
        - m_SelectorType: 1
          m_ViewType:
            m_TypeName: 
          m_EditorWindowType:
            m_TypeName: UnityEditor.ProjectBrowser, UnityEditor.CoreModule, Version=0.0.0.0,
              Culture=neutral, PublicKeyToken=null
          m_AlternateEditorWindowTypes:
            m_Items: []
          m_MaskType: 0
          m_MaskSizeModifier: 0
          m_UnmaskedControls: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
    - m_Type: 0
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: "The Axis system provides data by using the power of <b>C#
          Actions</b>! You don't need any kind of direct reference to any object.
          The way to communicate is by <b>subscribing to Actions</b> (to receive
          data like Node Rotation) and <b>Invoke Actions</b> to set something on
          the Node (like adding a vibration).  \n\nC# Actions are awesome! Really
          easy to use, they help on code organization and for this application you
          need 1-3 lines of code to get or set any Node data anywhere you want! You
          don't need to know anything about C# Actions for using Axis, but if you
          are unfamiliar and want to Level Up, check this tutorial: tutorial link.\n\nThe
          <b>Actions signatures</b> are on the file <b>AxisEvents.cs.</b>"
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
    - m_Type: 1
      Title:
        m_Untranslated: Open AxisEvents.cs
      Text:
        m_Untranslated: You will find the file on Packages/Axis SDK/Runtime/AxisEvents.cs
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items:
        - Type:
            m_TypeName: Unity.Tutorials.Core.Editor.ArbitraryCriterion, Unity.Tutorials.Core.Editor,
              Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
          Criterion: {fileID: 1775549955770890415}
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
  m_CameraSettings:
    m_CameraMode: 0
    m_FocusMode: 0
    m_Orthographic: 0
    m_Size: 0
    m_Pivot: {x: 0, y: 0, z: 0}
    m_Rotation: {x: 0, y: 0, z: 0, w: 0}
    m_FrameObject:
      m_SceneGuid: 
      m_GameObjectGuid: 
      m_SerializedComponentType:
        m_TypeName: 
      m_ComponentIndex: 0
      m_AssetObject: {fileID: 0}
      m_Prefab: {fileID: 0}
    m_Enabled: 0
  NextButton:
    m_Untranslated: Next
  DoneButton:
    m_Untranslated: Start
  m_CompletedSound: {fileID: 8300000, guid: 721643e1854433a4d9fa5d5220e024cf, type: 3}
  m_AutoAdvance: 0
  Showing:
    m_PersistentCalls:
      m_Calls:
      - m_Target: {fileID: 11400000, guid: 4ee4e73191b7e114a8ff854514abbf54, type: 2}
        m_TargetAssemblyTypeName: TutorialCallbacks, refract.runtime.AxisSDK.Tutorials
        m_MethodName: PingFolderOrAsset
        m_Mode: 5
        m_Arguments:
          m_ObjectArgument: {fileID: 0}
          m_ObjectArgumentAssemblyTypeName: UnityEngine.Object, UnityEngine
          m_IntArgument: 0
          m_FloatArgument: 0
          m_StringArgument: Packages/gg.refract.axissdk/Runtime/AxisEvents.cs
          m_BoolArgument: 0
        m_CallState: 1
  Shown:
    m_PersistentCalls:
      m_Calls: []
  Staying:
    m_PersistentCalls:
      m_Calls: []
  CriteriaValidated:
    m_PersistentCalls:
      m_Calls: []
  MaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  NonMaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforePageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnAfterPageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnTutorialPageStay:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforeTutorialQuit:
    m_PersistentCalls:
      m_Calls: []
  m_NextButton: 
  m_DoneButton: 
--- !u!114 &1775549955770890415
MonoBehaviour:
  m_ObjectHideFlags: 1
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 7231e8df50e16c74c979c4a2affab91b, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  Completed:
    m_PersistentCalls:
      m_Calls: []
  Invalidated:
    m_PersistentCalls:
      m_Calls: []
  isTesting: 0
  m_Callback:
    _target: {fileID: 11400000, guid: 1053a8c47284859428a240acc02e76c5, type: 2}
    _methodName: WasAxisEventsOpened
    _args: []
    _dynamic: 0
    _typeName: Unity.Tutorials.Core.Editor.ArbitraryCriterion+BoolCallback, Unity.Tutorials.Core.Editor,
      Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
    dirty: 0
  m_AutoCompleteCallback:
    _target: {fileID: 0}
    _methodName: 
    _args: []
    _dynamic: 0
    _typeName: Unity.Tutorials.Core.Editor.ArbitraryCriterion+BoolCallback, Unity.Tutorials.Core.Editor,
      Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
    dirty: 0
